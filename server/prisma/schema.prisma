generator client { provider = "prisma-client-js" }
datasource db { provider = env("DATABASE_URL") url = env("DATABASE_URL") }

enum Role { ADMIN MANAGER MEMBER }
enum TaskType { CONTENT ONPAGE OFFPAGE AUDIT BACKLINK CALENDAR SEMANTIC }
enum Status { NOT_STARTED IN_PROGRESS UPDATED DUE DONE FIXED VERIFIED OPEN }
enum Priority { HIGH MEDIUM LOW }

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(MEMBER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projects  Project[] @relation("ProjectManager")
  tasks     Task[]    @relation("TaskAssignee")
}

model Client {
  id        String   @id @default(cuid())
  name      String
  domain    String
  niche     String?
  projects  Project[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id           String   @id @default(cuid())
  name         String
  client       Client   @relation(fields: [clientId], references: [id])
  clientId     String
  manager      User     @relation("ProjectManager", fields: [managerId], references: [id])
  managerId    String
  startDate    DateTime?
  dueDate      DateTime?
  status       Status   @default(IN_PROGRESS)
  priority     Priority @default(MEDIUM)
  notes        String?
  tasks        Task[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Task {
  id          String   @id @default(cuid())
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   String
  assignee    User?    @relation("TaskAssignee", fields: [assigneeId], references: [id])
  assigneeId  String?
  type        TaskType
  title       String
  url         String?
  status      Status   @default(NOT_STARTED)
  priority    Priority @default(MEDIUM)
  details     Json?
  deadline    DateTime?
  lastUpdated DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
